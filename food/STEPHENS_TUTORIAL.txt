$ curl -L -O https://www.apache.org/dist/incubator/tinkerpop/3.1.0-SNAPSHOT/apache-gremlin-console-3.1.0-SNAPSHOT-bin.zip
$ unzip apache-gremlin-console-3.1.0-SNAPSHOT-bin.zip
$ cd apache-gremlin-console-3.1.0-SNAPSHOT-bin.zip
$ bin/gremlin.sh

Xgremlin> graph = TinkerFactory.createModern()
Xgremlin> g = graph.traversal()

gremlin> g.V()
gremlin> g.V(1)
Xgremlin> g.V(1).values('name') 
xgremlin> g.V(1).outE('knows') 
Xgremlin> g.V(1).outE('knows').inV().values('name')
Xgremlin> g.V(1).out('knows').values('name')
Xgremlin> g.V(1).out('knows').has('age', gt(30)).values('name')

xgremlin> graph = TinkerGraph.open()
xgremlin> v1 = graph.addVertex(id, 1, label, "person", "name", "marko", "age", 29)
xgremlin> v2 = graph.addVertex(id, 3, label, "software", "name", "lop", "lang", "java")
xgremlin> v1.addEdge("created", v2, id, 9, "weight", 0.4)

xgremlin> g.V().has('name','marko')
xgremlin> g.V().has('name','marko').outE('created')
xgremlin> g.V().has('name','marko').outE('created').inV()
xgremlin> g.V().has('name','marko').out('created')
xgremlin> g.V().has('name','marko').out('created').values('name')

xgremlin> graph = TinkerFactory.createModern()
xgremlin> g = graph.traversal()

gremlin> g.V().has('name',within('vadas','marko')).values('age')
gremlin> g.V().has('name',within('vadas','marko')).values('age').mean()
gremlin> g.V().has('name','marko').out('created').in('created').values('name')
gremlin> g.V().has('name','marko').as('exclude').out('created').in('created').where(neq('exclude')).values('name')

gremlin> g.V().as('a').out().as('b').out().as('c').select('a','b','c')
gremlin> g.V().group().by(label)
gremlin> g.V().group().by(label).by('name')

--------
$ curl -L -O http://snap.stanford.edu/data/wiki-Vote.txt.gz
$ gunzip wiki-Vote.txt.gz

SCRIPT:
graph = TinkerGraph.open()
graph.createIndex('userId', Vertex.class) (1)

gremlin> g = graph.traversal()

getOrCreate = { id ->
  g.V().has('userId', id).tryNext().orElseGet{ g.addV('userId', id).next() }
}

new File('wiki-Vote.txt').eachLine {
  if (!it.startsWith("#")){
    (fromVertex, toVertex) = it.split('\t').collect(getOrCreate) (2)
    fromVertex.addEdge('votesFor', toVertex)
  }
}

Gremlin server/REST example 

$ curl -L -O https://www.apache.org/dist/incubator/tinkerpop/3.1.0-SNAPSHOT/apache-gremlin-server-3.1.0-SNAPSHOT-bin.zip
$ unzip apache-gremlin-server-3.1.0-SNAPSHOT-bin.zip
$ cd apache-gremlin-server-3.1.0-SNAPSHOT-bin.zip
$ bin/gremlin-server.sh conf/gremlin-server-modern.yaml
$ curl -X POST -d "{\"gremlin\":\"g.V(x).out().values('name')\", \"language\":\"gremlin-groovy\", \"bindings\":{\"x\":1}}" "http://localhost:8182"